import numpy as np


arr = np.array([1, 2, 3, 4, 5])

print(arr)
#saida [1 2 3 4 5]

#Verificando a versão do NumPy
#A string da versão é armazenada no __version__ atributo.

print(np.__version__)#saida 1.16.3
#----------------------------------------------------------------------------------------------------
#Crie um objeto ndarray NumPy
#NumPy é usado para trabalhar com arrays. O objeto array em NumPy é chamado ndarray.

#Podemos criar um ndarrayobjeto NumPy usando a array()função.
arr = np.array([1, 2, 3, 4, 5])

print(arr)

print(type(arr))
#saida [1 2 3 4 5]
#<class 'numpy.ndarray'>

#type(): Esta função interna do Python nos informa o tipo do objeto passado para ela.
# Como no código acima, mostra que arré numpy.ndarraytype.

#----------------------------------------------------------------------------------------------------
#Para criar um ndarray, podemos passar uma lista, tupla ou qualquer objeto 
# semelhante a um array para o array() método, e ele será convertido em um ndarray:
arr = np.array((1, 2, 3, 4, 5))

print(arr)#saida [1 2 3 4 5]

#----------------------------------------------------------------------------------------------------
#Dimensões em Matrizes
#Uma dimensão em arrays é um nível de profundidade de array (arrays aninhados).

#array aninhado: são arrays que possuem arrays como seus elementos.

#Matrizes 0-D
#Matrizes 0-D, ou escalares, são os elementos em uma matriz. 
#Cada valor em uma matriz é uma matriz 0-D.
arr = np.array(42)

print(arr)#saida 42

#----------------------------------------------------------------------------------------------------
#Matrizes 1-D
#Uma matriz que tem matrizes 0-D como seus elementos é chamada de matriz unidimensional ou 1-D.

#Estas são as matrizes mais comuns e básicas.
arr = np.array([1, 2, 3, 4, 5])

print(arr)#saida [1 2 3 4 5]

#----------------------------------------------------------------------------------------------------
#Matrizes 2-D
#Uma matriz que tem matrizes 1-D como seus elementos é chamada de matriz 2-D.

#Estes são frequentemente usados ​​para representar matrizes ou tensores de 2ª ordem.

#O NumPy possui um submódulo inteiro dedicado às operações de matriz chamadas numpy.mat

arr = np.array([[1, 2, 3], [4, 5, 6]])

print(arr)
#saida [[1 2 3]
# [4 5 6]]
#----------------------------------------------------------------------------------------------------
#matrizes 3-D
#Uma matriz que possui matrizes 2-D (matrizes) como seus elementos é chamada de matriz 3-D.

#Estes são frequentemente usados ​​para representar um tensor de 3ª ordem.

arr = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]])

print(arr)
#saida [[[1 2 3]
#  [4 5 6]]
# [[1 2 3]
#  [4 5 6]]]

#----------------------------------------------------------------------------------------------------
#Verificar Número de Dimensões?
#NumPy Arrays fornece o ndimatributo que retorna um inteiro que 
# nos diz quantas dimensões o array tem.
a = np.array(42)
b = np.array([1, 2, 3, 4, 5])
c = np.array([[1, 2, 3], [4, 5, 6]])
d = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]])

print(a.ndim)#saida 0
print(b.ndim)#saida 1
print(c.ndim)#saida 2
print(d.ndim)#saida 3

#----------------------------------------------------------------------------------------------------
#Matrizes Dimensionais Superiores
#Uma matriz pode ter qualquer número de dimensões.

#Quando a matriz é criada, você pode definir o número de dimensões usando o ndminargumento.

arr = np.array([1, 2, 3, 4], ndmin=5)

print(arr)#saida [[[[[1 2 3 4]]]]]
print('number of dimensions :', arr.ndim)#saida number of dimensions : 5


#Neste array a dimensão mais interna (5º dim) tem 4 elementos,
# o 4º dim tem 1 elemento que é o vetor, 
# o 3º dim tem 1 elemento que é a matriz com o vetor,
# o 2º dim tem 1 elemento que é o array 3D e
# 1º dim tem 1 elemento que é uma matriz 4D.


#----------------------------------------------------------------------------------------------------
#Acessar Elementos da Matriz
#A indexação de array é o mesmo que acessar um elemento de array.

#Você pode acessar um elemento de array referindo-se ao seu número de índice.

#Os índices nas matrizes NumPy começam com 0, o que significa que o primeiro elemento
# tem índice 0 e o segundo tem índice 1, etc.
arr = np.array([1, 2, 3, 4])

print(arr[0])#saida 1

arr = np.array([1, 2, 3, 4])

print(arr[1])#saida 2

arr = np.array([1, 2, 3, 4])

print(arr[2] + arr[3])#saida 7


#----------------------------------------------------------------------------------------------------
#Acessar matrizes 2-D
#Para acessar elementos de arrays 2-D, podemos usar inteiros separados 
# por vírgula representando a dimensão e o índice do elemento.

#Pense em matrizes 2-D como uma tabela com linhas e colunas, 
# onde a linha representa a dimensão e o índice representa a coluna.

arr = np.array([[1,2,3,4,5], [6,7,8,9,10]])

print('2nd element on 1st row: ', arr[0, 1])
#saida 2nd element on 1st dim:  2

arr = np.array([[1,2,3,4,5], [6,7,8,9,10]])

print('5th element on 2nd row: ', arr[1, 4])
#saida 5th element on 2nd dim:  10

#----------------------------------------------------------------------------------------------------
#Acessar matrizes 3-D
#Para acessar elementos de arrays 3-D, podemos usar inteiros separados 
# por vírgula representando as dimensões e o índice do elemento.
arr = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])

print(arr[0, 1, 2])#saida 6


#Exemplo explicado
#arr[0, 1, 2]imprime o valor 6.

#E é por isso que:

#O primeiro número representa a primeira dimensão, que contém duas matrizes:
#[[1, 2, 3], [4, 5, 6]]
#e:
#[[7, 8, 9], [10, 11, 12]]
#Desde selecionamos 0, ficamos com o primeiro array:
#[[1, 2, 3], [4, 5, 6]]

#O segundo número representa a segunda dimensão, que também contém duas matrizes:
#[1, 2, 3]
#e:
#[4, 5, 6]
#Como selecionamos 1, ficamos com a segunda matriz:
#[4, 5, 6]

#O terceiro número representa a terceira dimensão, que contém três valores:
#4
#5
#6
#Como selecionamos 2, terminamos com o terceiro valor:
#6

#----------------------------------------------------------------------------------------------------
#Indexação negativa
#Use a indexação negativa para acessar uma matriz do final.
arr = np.array([[1,2,3,4,5], [6,7,8,9,10]])

print('Last element from 2nd dim: ', arr[1, -1])
#saida Last element from 2nd dim:  10

#----------------------------------------------------------------------------------------------------
#Slicing arrays
#Fatiar em python significa levar elementos de um determinado índice para outro determinado índice.
#Passamos slice ao invés de index assim: .[start:end]
#Também podemos definir a etapa, assim: .[start:end:step]
#Se não passarmos, o início é considerado 0
#Se não passarmos, termine seu comprimento considerado de matriz nessa dimensão
#Se não passarmos da etapa, é considerado 1


arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[1:5])#saida [2 3 4 5]


#Observação: o resultado inclui o índice inicial, mas exclui o índice final.
arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[4:])#saida [5 6 7]

arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[:4])#saida [1 2 3 4]
#----------------------------------------------------------------------------------------------------
#Corte Negativo
#Use o operador menos para se referir a um índice do final:

arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[-3:-1])#saida [5 6]

#----------------------------------------------------------------------------------------------------
#DEGRAU
#Use o stepvalor para determinar a etapa do fatiamento:
arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[1:5:2])
#saida [2 4]

arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[::2])
#saida [1 3 5 7]

#----------------------------------------------------------------------------------------------------
#Fatiando matrizes 2-D

arr = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])

print(arr[1, 1:4])
#saida [7 8 9]

#Nota: Lembre-se que o segundo elemento tem índice 1.

arr = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])

print(arr[0:2, 1:4])
#saida [[2 3 4]
# [7 8 9]]

arr = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])

print(arr[0:2, 2])
#saida [3 8]

#----------------------------------------------------------------------------------------------------
#Tipos de Dados em Python
#Por padrão, o Python tem esses tipos de dados:

#strings- usado para representar dados de texto, o texto é fornecido entre aspas. 
# por exemplo, "ABCD"
#integer- usado para representar números inteiros. por exemplo -1, -2, -3
#float- usado para representar números reais. por exemplo, 1,2, 42,42
#boolean- usado para representar Verdadeiro ou Falso.
#complex- usado para representar números complexos. por exemplo, 1,0 + 2,0j, 1,5 + 2,5j
#Tipos de dados no NumPy
#O NumPy tem alguns tipos de dados extras e se refere a tipos de dados com um caractere,
# como iinteiros, uinteiros sem sinal, etc.

#Abaixo está uma lista de todos os tipos de dados no NumPy e 
# os caracteres usados ​​para representá-los.

#i- inteiro
#b- boleano
#u- inteiro sem sinal
#f- flutuar
#c- flutuação complexa
#m- timedelta
#M- data hora
#O- objeto
#S- corda
#U- string unicode
#V- pedaço fixo de memória para outro tipo (void)

#Verificando o tipo de dados de uma matriz
#O objeto array NumPy tem uma propriedade chamada dtype que retorna o tipo de dado do array:
arr = np.array([1, 2, 3, 4])

print(arr.dtype)
#saida int64

#----------------------------------------------------------------------------------------------------
arr = np.array(['apple', 'banana', 'cherry'])

print(arr.dtype)#saida <U6

#----------------------------------------------------------------------------------------------------
#Criando Arrays com um Tipo de Dados Definido
#Usamos a array()função para criar arrays, esta função pode receber um argumento opcional:
# dtype que nos permite definir o tipo de dado esperado dos elementos do array:
arr = np.array([1, 2, 3, 4], dtype='S')

print(arr)#saida [b'1' b'2' b'3' b'4']
print(arr.dtype)#saida |S1

#Para i, u, fe Stambém Upodemos definir o tamanho.

arr = np.array([1, 2, 3, 4], dtype='i4')

print(arr)#saida [1 2 3 4]
print(arr.dtype)#saida int32

#----------------------------------------------------------------------------------------------------
#E se um valor não puder ser convertido?
#Se for fornecido um tipo no qual os elementos não podem ser convertidos,
# o NumPy gerará um ValueError.

#ValueError: Em Python ValueError é levantado quando o tipo de 
# argumento passado para uma função é inesperado/incorreto.
arr = np.array(['a', '2', '3'], dtype='i')
#saida Traceback (most recent call last):
#  File "./prog.py", line 3, in 
#ValueError: invalid literal for int() with base 10: 'a'

#----------------------------------------------------------------------------------------------------
#Convertendo tipo de dados em matrizes existentes
#A melhor maneira de alterar o tipo de dados de uma matriz existente é 
# fazer uma cópia da matriz com o astype()método.

#A astype()função cria uma cópia da matriz e permite especificar
# o tipo de dados como um parâmetro.

#O tipo de dados pode ser especificado usando uma string, 
# como 'f'para float, 'i'for integer etc. ou você pode usar o tipo de 
# dados diretamente como floatpara float e intfor integer.
arr = np.array([1.1, 2.1, 3.1])

newarr = arr.astype('i')

print(newarr)#saida [1 2 3]
print(newarr.dtype)#saida int32

arr = np.array([1.1, 2.1, 3.1])

newarr = arr.astype(int)

print(newarr)#saida [1 2 3]
print(newarr.dtype)#saida int64

arr = np.array([1, 0, 3])

newarr = arr.astype(bool)

print(newarr)#saida [ True False True]
print(newarr.dtype)#saida bool

#----------------------------------------------------------------------------------------------------
#A diferença entre copiar e visualizar
#A principal diferença entre uma cópia e uma visualização de um array é 
# que a cópia é um novo array e a visualização é apenas uma visualização do array original.

#A cópia possui os dados e quaisquer alterações feitas na cópia não afetarão o 
# array original, e quaisquer alterações feitas no array original não afetarão a cópia.

#A exibição não possui os dados e quaisquer alterações feitas na exibição afetarão
# a matriz original, e quaisquer alterações feitas na matriz original afetarão a exibição.

#CÓPIA DE:
arr = np.array([1, 2, 3, 4, 5])
x = arr.copy()
arr[0] = 42

print(arr)#saida [42  2  3  4  5]
print(x)#saida [1 2 3 4 5]

#OBS:A cópia NÃO DEVE ser afetada pelas alterações feitas no array original.
#----------------------------------------------------------------------------------------------------
#VISÃO:
arr = np.array([1, 2, 3, 4, 5])
x = arr.view()
arr[0] = 42

print(arr)#saida [42  2  3  4  5]
print(x)#saida [42  2  3  4  5]

#OBS:A exibição DEVE ser afetada pelas alterações feitas no array original.

#----------------------------------------------------------------------------------------------------
#Faça alterações na VISUALIZAÇÃO:
arr = np.array([1, 2, 3, 4, 5])
x = arr.view()
x[0] = 31

print(arr)#saida [31  2  3  4  5]
print(x)#saida [31  2  3  4  5]

#OBS: A matriz original DEVE ser afetada pelas alterações feitas na exibição.

#----------------------------------------------------------------------------------------------------
#Verifique se o array possui seus dados
#Conforme mencionado acima, as cópias são proprietárias dos dados e as exibições não são proprietárias dos dados, mas como podemos verificar isso?

#Cada matriz NumPy possui o atributo baseque retorna Nonese a matriz possuir os dados.

#Caso contrário, o base  atributo se refere ao objeto original.

arr = np.array([1, 2, 3, 4, 5])

x = arr.copy()
y = arr.view()

print(x.base)#saida None
print(y.base)#saida [1 2 3 4 5]

#A cópia retorna None.
#A exibição retorna a matriz original.

#----------------------------------------------------------------------------------------------------
#Forma de uma matriz
#A forma de uma matriz é o número de elementos em cada dimensão.

#Obter a forma de uma matriz
#As matrizes NumPy têm um atributo chamado shapeque retorna uma tupla com
# cada índice tendo o número de elementos correspondentes.
arr = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])

print(arr.shape)#saida (2, 4)

#O exemplo acima retorna (2, 4), o que significa que o array possui 2 dimensões,
# onde a primeira dimensão possui 2 elementos e a segunda possui 4.


arr = np.array([1, 2, 3, 4], ndmin=5)

print(arr)#saida [[[[[1 2 3 4]]]]]
print('shape of array :', arr.shape)#saida shape of array : (1, 1, 1, 1, 4)

arr = np.array([1, 2, 3, 4], ndmin=5)

print(arr)#saida [[[[[1 2 3 4]]]]]
print('shape of array :', arr.shape)#saida shape of array : (1, 1, 1, 1, 4)

#O que a tupla de forma representa?
#Inteiros em cada índice informa sobre o número de 
# elementos que a dimensão correspondente possui.
#No exemplo acima no índice-4 temos o valor 4, então podemos dizer 
# que a 5ª (4 + 1ª) dimensão tem 4 elementos.

#----------------------------------------------------------------------------------------------------
#Remodelando matrizes
#Remodelar significa alterar a forma de uma matriz.

#A forma de uma matriz é o número de elementos em cada dimensão.

#Ao remodelar, podemos adicionar ou remover dimensões ou alterar o número de elementos em cada dimensão.

#Remodelar de 1-D para 2-D
arr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])
newarr = arr.reshape(4, 3)
print(newarr)
#saida [[ 1  2  3]
# [ 4  5  6]
# [ 7  8  9]
# [10 11 12]]
#----------------------------------------------------------------------------------------------------
#Remodelar de 1-D para 3-D

arr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])
newarr = arr.reshape(2, 3, 2)
print(newarr)
#saida [[[ 1  2]
#  [ 3  4]
#  [ 5  6]]
# [[ 7  8]
#  [ 9 10]
#  [11 12]]]

#----------------------------------------------------------------------------------------------------
#Podemos remodelar em qualquer forma?
#Sim, desde que os elementos necessários para remodelar sejam iguais em ambas as formas.

#Podemos remodelar uma matriz 1D de 8 elementos em uma matriz 2D de 4
# elementos em 2 linhas, mas não podemos remodelá-la em uma matriz 2D de 3 linhas
# e 3 elementos, pois isso exigiria 3x3 = 9 elementos.

arr = np.array([1, 2, 3, 4, 5, 6, 7, 8])

newarr = arr.reshape(3, 3)

print(newarr)
#saida Traceback (most recent call last):
#  File "demo_numpy_array_reshape_error.py", line 5, in <module>
#ValueError: cannot reshape array of size 8 into shape (3,3)


#----------------------------------------------------------------------------------------------------
#Retorna Copiar ou Visualizar?
arr = np.array([1, 2, 3, 4, 5, 6, 7, 8])

print(arr.reshape(2, 4).base)#saida [1 2 3 4 5 6 7 8]

#----------------------------------------------------------------------------------------------------
#Dimensão Desconhecida
#Você tem permissão para ter uma dimensão "desconhecida".

#Isso significa que você não precisa especificar um número exato para uma das dimensões no método reshape.

#Passe -1como o valor e o NumPy calculará esse número para você.
arr = np.array([1, 2, 3, 4, 5, 6, 7, 8])
newarr = arr.reshape(2, 2, -1)
print(newarr)
#saida [[[1 2]
#  [3 4]]
#
# [[5 6]
#  [7 8]]]
#Nota: Não podemos passar -1para mais de uma dimensão.
#----------------------------------------------------------------------------------------------------
#Achatando os arrays
#Achatar a matriz significa converter uma matriz multidimensional em uma matriz 1D.

#Podemos usar reshape(-1)para fazer isso.
arr = np.array([[1, 2, 3], [4, 5, 6]])
newarr = arr.reshape(-1)
print(newarr)
#saida [1 2 3 4 5 6]

#Nota: Existem muitas funções para alterar as formas de arrays em numpy flatten,
# ravele também para reorganizar os elementos rot90, flip, fliplr, flipudetc.
# Elas se enquadram na seção Intermediário a Avançado de numpy.
#----------------------------------------------------------------------------------------------------

#a continuação é na interação de matriz numPy

#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------


#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------


#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------


#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------


#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------


#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------


#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------




#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------


#----------------------------------------------------------------------------------------------------



#----------------------------------------------------------------------------------------------------
